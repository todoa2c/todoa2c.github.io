<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | 技術情報棚卸し(平日限定)]]></title>
  <link href="http://todoa2c.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://todoa2c.github.io/"/>
  <updated>2014-02-06T18:41:51+09:00</updated>
  <id>http://todoa2c.github.io/</id>
  <author>
    <name><![CDATA[Atsushi Kanaya (todoa2c)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[カスタム条件で二分探索したい]]></title>
    <link href="http://todoa2c.github.io/blog/2014/02/06/custom-bisect/"/>
    <updated>2014-02-06T16:46:42+09:00</updated>
    <id>http://todoa2c.github.io/blog/2014/02/06/custom-bisect</id>
    <content type="html"><![CDATA[<p>Pythonの<a href="http://docs.python.jp/3/library/bisect.html">bisect</a>の返す結果に戸惑った、
と同僚に話したところ、「いや他の言語のライブラリも大体同じですよ」
と言われたわけです。</p>

<p>戸惑った部分ですが、<a href="https://paiza.jp/poh/ec-campaign">新人プログラマー野田さんの課題</a>を
解いている過程で、「指定した金額以下で一番大きい金額のインデックス」が欲しい、と思ったのですよね。
結局それは<a href="http://docs.python.jp/3/library/bisect.html#bisect.bisect_left">bisect.bisect_left</a>を使って解決したんだけど、
bisect_leftの場合「返り値のインデックスの更に1コ前」が欲しい値だったわけです。</p>

<p>改めて二分探索の挙動について調べたところ、少なくともPython, Java共に、
あるデータが「挿入されてもソート状態が保たれる箇所」を探索してくれるものらしい。</p>

<p>例えば以下はPythonの例。</p>

<p>```
import bisect</p>

<p>a = [1, 2, 4, 8, 11]
data = 6
i = bisect.bisect(a, data)</p>

<h1>i の値は 3</h1>

<p>a.insert(i, data)</p>

<h1>a の値は [1, 2, 4, 6, 8, 11]</h1>

<p>```</p>

<p>なるほど。納得。</p>

<p>とは言え、カスタムの条件で二分探索したいケースもあると思うんですよね。例えば<a href="http://ja.wikipedia.org/wiki/%E6%8E%A5%E5%B0%BE%E8%BE%9E%E9%85%8D%E5%88%97">接尾辞配列</a>のように。</p>

<p>超簡単な例だと、こういうイメージ。</p>

<p>```
txt = &lsquo;banana&rsquo;
suf = [i for i in range(len(txt))]</p>

<h1>suf の値は [0, 1, 2, 3, 4, 5]</h1>

<p>suf.sort(key=lambda i: txt[i:])</p>

<h1>suf の値は [5, 3, 1, 0, 4, 2]</h1>

<p>print([txt[i:] for i in suf])</p>

<h1>[&lsquo;a&rsquo;, &lsquo;ana&rsquo;, &lsquo;anana&rsquo;, &lsquo;banana&rsquo;, &lsquo;na&rsquo;, &lsquo;nana&rsquo;] が出力される。</h1>

<h1>この結果は、全部分文字列がソートされた状態</h1>

<h2>a</h2>

<h2>ana</h2>

<h2>anana</h2>

<h2>banana</h2>

<h2>na</h2>

<h2>nana</h2>

<h1>sufにはソートされた状態の各部分文字列へのインデックスが格納されている。</h1>

<h1>この中から、例えば'an'が含まれる全ての箇所を探す、というのはbisectでは探索できない…</h1>

<p>```</p>

<p>こういう用途用の二分探索は、接尾辞配列ライブラリに含まれてると思うんですけどね。</p>

<p>少なくともPythonで言うと、リストの外の情報を使ってソートすることはできるけれど、
それに対する二分探索による探索がないのはちょっと不便な気がしたのです。
それを可能とするライブラリがあるのであれば、それを使うにして、
なければそれを実現するライブラリを作ろうかしら。</p>

<p>「それ～～でできるよ」情報があったらお教え下さいませ。</p>
]]></content>
  </entry>
  
</feed>
